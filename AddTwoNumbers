/**Add two Numbers
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode t1=l1,t2=l2,result=null,r=null;
        int c=0;
        while(t1!=null||t2!=null)
        {  int sum=0;
           if(t1!=null)   {sum+=t1.val;t1=t1.next;}
           if(t2!=null)   {sum+=t2.val;t2=t2.next;}
           sum+=c;
           c=sum/10;
         if(result==null)
         {
          ListNode temp=new ListNode(sum%10);
          r=result=temp;
         }
         else
         {
          ListNode temp=new ListNode(sum%10);
          r.next=temp;
          r=r.next;
         }
        }
        if(c>0){
         ListNode temp=new ListNode(c);
          r.next=temp;
               }
        return result;
    }
}



/*

public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode c1 = l1;
        ListNode c2 = l2;
        ListNode sentinel = new ListNode(0);
        ListNode d = sentinel;
        int sum = 0;
        while (c1 != null || c2 != null) {
            sum /= 10;
            if (c1 != null) {
                sum += c1.val;
                c1 = c1.next;
            }
            if (c2 != null) {
                sum += c2.val;
                c2 = c2.next;
            }
            d.next = new ListNode(sum % 10);
            d = d.next;
        }
        if (sum / 10 == 1)
            d.next = new ListNode(1);
        return sentinel.next;
    }
}

*/
